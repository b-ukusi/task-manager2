span(style="font-family: verdana, geneva, sans-serif;")
  doctype html
  html(lang="en")
    head
      meta(charset="UTF-8")
      title Client Dashboard
      link(rel="stylesheet",  type='text/css', href="/stylesheets/aclient.css")
      script(defer, src='/javascripts/popup2.js')
      script(defer, src='/javascripts/login.js')
  
       script(defer,src="././routes/admin.js")

      //- Font Awesome Cdn Link -->
      link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css")
    body
      .container
        nav
          div
            h1 
              img(src="/images/LOGO33.jpg", alt="Admin")
              Admin 
            ul
              li
                a(href="/admin/", class="logo")
                  h2 DashBoard
              li
                a(href="/admin/clients")
                  i.fas.fa-address-card 
                  span.nav-item clients 
              li
                a(href="/admin/developers")
                  i.fas.fa-address-book
                  span.nav-item developers 
              li
                a(href="/admin/projects")
                  i.fas.fa-cogs
                  span.nav-item projects   
              li
                a(href="/admin/tasks")
                  i.fas.fa-tasks
                  span.nav-item tasks
          ul
              a(href="/", class="logout")
                i.fas.fa-sign-out-alt
                span.nav-item Log out
        section.main
                .main-top
                    h1 Clients 
                .main-body
                   .main-body
                    input.search-input(type="text", placeholder=" Search Client ")  
                    button.newclient-button(data-modal-target="#modal") New Client
                .modal#modal
                  .modal-header
                    .title New Client
                    button(data-close-button, class="data-close-button") &times;
                  .modal-body
                     form(id ='create-client-form'  action="/admin/createclient", method="get",)
                          .main-user-info
                              .user-input-box
                                  label(for="fname =") First name 
                                  input(type="text", id="fname", name="FirstName", placeholder=" client name" required, pattern='[A-Za-z]{3,}',title='Name must be at least 3 letters and contain only letters')
                              .user-input-box
                                  label(for="lname ") Last name
                                  input(type="text", id="lname", name="LastName", placeholder="developer name " required, pattern='[A-Za-z]{3,}',title='Name must be at least 3 letters and contain only letters')
                              .user-input-box2
                                  label(for="email") Email
                                  input(type="email", id="email", name="EmailUser", placeholder="Enter Email" required, title='Please enter a valid email address')
                              .user-input-box2
                                  label(for="password") Password
                                  input(type="password", id="password", name="Pass", placeholder="Enter password" required pattern='(?=.*)(?=.*[a-zA-Z]).{8,}', title='Password must be at least 8 characters long and contain both letters and numbers')
                                
                              //- if message
                                  .alert.alert-success
                                      p= message
                          .form-submit-btn
                              input(type="submit", value="Create Client", id="create-client-button")

                .main-body2       
                  each client  in clients
                    .card 
                      .card-body 
                        p= `User # : ${client.Userid}`
                        p= `User type : ${client.userType}`
                        p= `First Name : ${client.FirstName}`
                        p= `Last Name : ${client.LastName}`
                        p= `Email : ${client.Email}`    
                        p= `Pass :${client.Pass}` 
                      .info-btn
                      input(type="button" value="Delete Client" onclick="window.location.href='clients?action=delete&Userid=#{client.Userid}'")
                      //- input(type="button" value="Update Client" onclick="window.location.href='clients?action=update&Userid=readfrom the page atakaa its what was pased as user id $FirstName=ilefiledikonafirtsname'")
                      // so make this one for update pop up a window then on its on click, make it do like the delete so can update with the req.query params then reload teh clients page.

                      //- input(type="button" value="Update Client" onclick="updateClient('#{client.Userid}')")

    script(src=".//routes/admin.js")
                #overlay


             
                  
                        